name: Release

on:
  push:
    branches:  
      - main

jobs:
  windows_build:
    name: "Windows x64 (latest)"
    runs-on: windows-latest

    - name: Qt static build
        run: |
          git clone https://code.qt.io/qt/qt5.git -b 5.15.2
          cd qt5
          ./init-repository -f --module-subset=qtbase
          ./configure -static -release -prefix "../Qt5Static" \ 
                              -qt-zlib \
                              -qt-libpng \
                              -qt-libjpeg \
                              -qt-freetype \
                              -no-opengl \
                              -skip qt3d \
                              -skip qtactiveqt \
                              -skip qtandroidextras \
                              -skip qtcharts \
                              -skip qtconnectivity \
                              -skip qtdatavis3d \ 
                              -skip qtdeclarative \
                              -skip qtdoc \
                              -skip qtgamepad \
                              -skip qtlocation \
                              -skip qtlottie \
                              -skip qtmacextras \
                              -skip qtmultimedia \
                              -skip qtnetworkauth \
                              -skip qtpurchasing \
                              -skip qtquick3d \
                              -skip qtquickcontrols \
                              -skip qtquickcontrols2 \
                              -skip qtquicktimeline \
                              -skip qtremoteobjects \
                              -skip qtscript \
                              -skip qtsensors \
                              -skip qtspeech \
                              -skip qtsvg \
                              -skip qtwayland \
                              -skip qtwebglplugin \
                              -skip qtwebview \
                              -skip webengine \
                              -nomake tools \
                              -nomake tests \
                              -nomake examples \
                              -no-dbus \
                              -no-ssl \
                              -no-pch \
                              -opensource \
                              -confirm-license
          make -j4 && make install

      - name: Deploy
        uses: ncipollo/release-action@v1
        with:
          artifacts: qtstatic.zip
          token: ${{ secrets.ACCESS_TOKEN }}
          commit: main
          tag: windows-x64

#    - name: Installation Qt 5.15.2
#      uses: jurplel/install-qt-action@v2.13.2
#      with:
#        arch: win64_mingw81

#    - name: Build
#      run: |
#        qmake ./taiga-server.pro
#        mingw32-make -j4
#        mingw32-make install
#      shell: bash

#    - name: Deploy
#      run: |
#        cd ./release/out/
#        ${{ runner.workspace }}\Qt\5.15.2\mingw81_64\bin\windeployqt.exe --no-translations --compiler-runtime taiga-server.exe
#        echo "${{ steps.get_version.outputs.VERSION }}" >> version
#        cd ../../
#        7z a foxtrip-api.zip .\release\out\*
#        mkdir .\deploy\x64
#        copy foxtrip-api.zip .\deploy\x64
#      shell: cmd

#    - name: Delivery
#      uses: SamKirkland/FTP-Deploy-Action@4.2.0
#      with:
#        server: ${{ secrets.FTP_SERVER }}
#        username: ${{ secrets.FTP_USERNAME }}
#        password: ${{ secrets.FTP_PASSWORD }}
#        server-dir: ./foxtrip.api/bin/${{ steps.get_version.outputs.VERSION }}/windows/
#        local-dir: ./deploy/

#---------------------------------------------------------------------------------------------------------------------------------------------------       
  
#  ubuntu_build:
#    name: "Ubuntu x64 (latest)"
#    runs-on: ubuntu-latest

#    steps:
#    - name: Get version
#      id: get_version
#      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

#    - name: Checkout
#      uses: actions/checkout@v2 
#      with:
#        token: ${{ secrets.ACCESS_TOKEN }}
#        submodules: recursive

#    - name: Installation Qt 5.15.2
#      uses: jurplel/install-qt-action@v2.13.2
#          
#    - name: Build
#      run: |
#        qmake ./foxtrip.cli.pro
#        make -j4
#        make install

#      shell: bash

#    - name: Deploy
#      run: |
#        wget -c https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
#        chmod a+x linuxdeployqt-continuous-x86_64.AppImage
#        ./linuxdeployqt-continuous-x86_64.AppImage ./release/out/foxtrip-cli -unsupported-allow-new-glibc -no-translations -appimage
#        mkdir -pv deploy/x64/
#        cp ./release/out/foxtrip-cli.AppImage ./deploy/x64/
#      shell: bash 

#    - name: Delivery
#      uses: SamKirkland/FTP-Deploy-Action@4.2.0
#      with:
#        server: ${{ secrets.FTP_SERVER }}
#        username: ${{ secrets.FTP_USERNAME }}
#        password: ${{ secrets.FTP_PASSWORD }}
#        server-dir: ./foxtrip.cli/bin/${{ steps.get_version.outputs.VERSION }}/ubuntu/
#        local-dir: ./deploy/

#---------------------------------------------------------------------------------------------------------------------------------------------------

#  release_update:
#    name: "Release latest"
#    runs-on: ubuntu-latest
#    needs: [ubuntu_build]

#    if: success()
#    steps:
#    - name: Get version
#      id: get_version
#      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

#    - name: Update latest version
#      run: echo "${{ steps.get_version.outputs.VERSION }}" >> latest

#    - name: Delivery latest version
#      uses: SamKirkland/FTP-Deploy-Action@4.2.0
#      with:
#        server: ${{ secrets.FTP_SERVER }}
#        username: ${{ secrets.FTP_USERNAME }}
#        password: ${{ secrets.FTP_PASSWORD }}
#        server-dir: ./foxtrip.cli/
#        local-dir: ./  
